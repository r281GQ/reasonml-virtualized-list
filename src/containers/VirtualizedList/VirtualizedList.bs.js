// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Belt_SortArray = require("bs-platform/lib/js/belt_SortArray.js");
var Belt_HashMapInt = require("bs-platform/lib/js/belt_HashMapInt.js");

function scrollTop(prim) {
  return prim.scrollTop;
}

function VirtualizedList(Props) {
  Props.bufferCount;
  Props.defaultHeight;
  var data = Props.data;
  var identity = Props.identity;
  var viewPortRef = Props.viewPortRef;
  var renderItem = Props.renderItem;
  var match = React.useState((function () {
          return 0;
        }));
  var setStartIndex = match[1];
  var startIndex = match[0];
  var match$1 = React.useState((function () {
          return 10;
        }));
  var endIndex = match$1[0];
  var refMap = React.useRef(Belt_HashMapInt.make(100));
  var heightMap = React.useRef(Belt_HashMapInt.make(100));
  var sortByKey = function (a, b) {
    var id_b = b[0];
    var id_a = a[0];
    var match = Caml_obj.caml_greaterthan(id_a, id_b);
    if (match) {
      return 1;
    } else if (id_a === id_b) {
      return 0;
    } else {
      return -1;
    }
  };
  var convertToSortedArray = function (heightMap) {
    return Belt_SortArray.stableSortBy(Belt_HashMapInt.toArray(heightMap.current), sortByKey);
  };
  React.useEffect((function () {
          Belt_Option.map(Belt_Option.map(Caml_option.nullable_to_opt(viewPortRef.current), (function (prim) {
                      return prim;
                    })), (function (element) {
                  element.addEventListener("scroll", (function (_e) {
                          return Curry._1(setStartIndex, (function (_prev) {
                                        return Belt_Array.reduce(convertToSortedArray(heightMap), /* tuple */[
                                                      0,
                                                      0
                                                    ], (function (sum, item) {
                                                        var sumHeight = sum[1];
                                                        var match = sumHeight > (element.scrollTop | 0);
                                                        if (match) {
                                                          return sum;
                                                        } else {
                                                          return /* tuple */[
                                                                  item[0],
                                                                  item[1] + sumHeight | 0
                                                                ];
                                                        }
                                                      }))[0];
                                      }));
                        }));
                  return /* () */0;
                }));
          return (function (param) {
                    Belt_Option.map(Belt_Option.map(Caml_option.nullable_to_opt(viewPortRef.current), (function (prim) {
                                return prim;
                              })), (function (element) {
                            element.removeEventListener("scroll", (function (_e) {
                                    return /* () */0;
                                  }));
                            return /* () */0;
                          }));
                    return /* () */0;
                  });
        }), /* array */[]);
  React.useEffect((function () {
          return undefined;
        }), /* array */[]);
  return React.createElement(React.Fragment, {
              children: React.createElement("div", undefined, React.createElement("div", {
                        className: Css.style(/* :: */[
                              Css.paddingTop(Css.px(Caml_int32.imul(startIndex, 200))),
                              /* :: */[
                                Css.paddingBottom(Css.px(Caml_int32.imul(data.length - endIndex | 0, 200))),
                                /* [] */0
                              ]
                            ])
                      }, Belt_Array.map(Belt_Array.map(Belt_Array.slice(data, startIndex, endIndex - startIndex | 0), (function (item) {
                                  return /* tuple */[
                                          Curry._1(renderItem, item),
                                          Curry._1(identity, item)
                                        ];
                                })), (function (itemTuple) {
                              var id = itemTuple[1];
                              return React.cloneElement(itemTuple[0], {
                                          ref: (function (elementRef) {
                                              Belt_HashMapInt.set(refMap.current, id, elementRef);
                                              return Belt_Option.map(Belt_Option.map((elementRef == null) ? undefined : Caml_option.some(elementRef), (function (prim) {
                                                                return prim.clientHeight;
                                                              })), (function (height) {
                                                            return Belt_HashMapInt.set(heightMap.current, id, height);
                                                          }));
                                            })
                                        });
                            }))))
            });
}

var make = VirtualizedList;

exports.scrollTop = scrollTop;
exports.make = make;
/* Css Not a pure module */
