// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Item$ReactHooksTemplate = require("./components/Item/Item.bs.js");
var VirtualizedList$ReactHooksTemplate = require("./containers/VirtualizedList/VirtualizedList.bs.js");

function randomHeight(x) {
  return x * 100 + 200;
}

var data = Belt_Array.map(Belt_Array.range(0, 25), (function (id) {
        return /* record */[
                /* id */id,
                /* heightProp */randomHeight(Math.random()) | 0,
                /* sampleString */String(id)
              ];
      }));

function App(Props) {
  var testRef = React.useRef(null);
  return React.createElement("div", {
              ref: testRef,
              className: Css.style(/* :: */[
                    Css.maxHeight(Css.vh(100)),
                    /* :: */[
                      Css.overflowY(/* scroll */-949692403),
                      /* [] */0
                    ]
                  ])
            }, React.createElement(VirtualizedList$ReactHooksTemplate.make, {
                  data: data,
                  identity: (function (data) {
                      return data[/* id */0];
                    }),
                  viewPortRef: testRef,
                  renderItem: (function (data) {
                      return React.createElement(Item$ReactHooksTemplate.make, {
                                  id: data[/* id */0],
                                  heightProp: data[/* heightProp */1],
                                  key: String(data[/* id */0])
                                });
                    })
                }));
}

var unit = /* () */0;

var make = App;

exports.unit = unit;
exports.randomHeight = randomHeight;
exports.data = data;
exports.make = make;
/* data Not a pure module */
